// Code generated by protoc-gen-go. DO NOT EDIT.
// source: staticData.proto

/*
Package staticData is a generated protocol buffer package.

It is generated from these files:
	staticData.proto

It has these top-level messages:
	GetLocationsRequest
	GetLocationsResponse
	Location
	Station
	Coordinates
	SolarSystem
	Constellation
	Region
	GetMarketTypesResponse
*/
package staticData

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
import google_protobuf2 "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetLocationsRequest struct {
	// Get data for these location IDs
	LocationIds []int64 `protobuf:"varint,1,rep,packed,name=location_ids,json=locationIds" json:"location_ids,omitempty"`
}

func (m *GetLocationsRequest) Reset()                    { *m = GetLocationsRequest{} }
func (m *GetLocationsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetLocationsRequest) ProtoMessage()               {}
func (*GetLocationsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetLocationsRequest) GetLocationIds() []int64 {
	if m != nil {
		return m.LocationIds
	}
	return nil
}

type GetLocationsResponse struct {
	// Locations retrieved
	Locations map[int64]*Location `protobuf:"bytes,1,rep,name=locations" json:"locations,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *GetLocationsResponse) Reset()                    { *m = GetLocationsResponse{} }
func (m *GetLocationsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetLocationsResponse) ProtoMessage()               {}
func (*GetLocationsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetLocationsResponse) GetLocations() map[int64]*Location {
	if m != nil {
		return m.Locations
	}
	return nil
}

type Location struct {
	// Information about a region
	Region *Region `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	// Information about a constellation
	Constellation *Constellation `protobuf:"bytes,2,opt,name=constellation" json:"constellation,omitempty"`
	// Information about a solar system
	SolarSystem *SolarSystem `protobuf:"bytes,3,opt,name=solar_system,json=solarSystem" json:"solar_system,omitempty"`
	// Information about a station
	Station *Station `protobuf:"bytes,4,opt,name=station" json:"station,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Location) GetRegion() *Region {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *Location) GetConstellation() *Constellation {
	if m != nil {
		return m.Constellation
	}
	return nil
}

func (m *Location) GetSolarSystem() *SolarSystem {
	if m != nil {
		return m.SolarSystem
	}
	return nil
}

func (m *Location) GetStation() *Station {
	if m != nil {
		return m.Station
	}
	return nil
}

type Station struct {
	// The station's ID
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// The station's name
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The station's typeID (only for structures)
	TypeId int64 `protobuf:"varint,3,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	// The station type's name (only for structures)
	TypeName string `protobuf:"bytes,4,opt,name=type_name,json=typeName" json:"type_name,omitempty"`
	// When the station was last seen (only for structures)
	LastSeen *google_protobuf2.Timestamp `protobuf:"bytes,5,opt,name=last_seen,json=lastSeen" json:"last_seen,omitempty"`
	// Whether this station is public (only for structures)
	Public bool `protobuf:"varint,6,opt,name=public" json:"public,omitempty"`
	// When the station was first seen (only for structures)
	FirstSeen *google_protobuf2.Timestamp `protobuf:"bytes,7,opt,name=first_seen,json=firstSeen" json:"first_seen,omitempty"`
	// The station's coordinates (only for structures)
	Coordinates *Coordinates `protobuf:"bytes,8,opt,name=coordinates" json:"coordinates,omitempty"`
}

func (m *Station) Reset()                    { *m = Station{} }
func (m *Station) String() string            { return proto.CompactTextString(m) }
func (*Station) ProtoMessage()               {}
func (*Station) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Station) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Station) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Station) GetTypeId() int64 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

func (m *Station) GetTypeName() string {
	if m != nil {
		return m.TypeName
	}
	return ""
}

func (m *Station) GetLastSeen() *google_protobuf2.Timestamp {
	if m != nil {
		return m.LastSeen
	}
	return nil
}

func (m *Station) GetPublic() bool {
	if m != nil {
		return m.Public
	}
	return false
}

func (m *Station) GetFirstSeen() *google_protobuf2.Timestamp {
	if m != nil {
		return m.FirstSeen
	}
	return nil
}

func (m *Station) GetCoordinates() *Coordinates {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

type Coordinates struct {
	// X-Coordinate
	X float64 `protobuf:"fixed64,1,opt,name=x" json:"x,omitempty"`
	// Y-Coordinate
	Y float64 `protobuf:"fixed64,2,opt,name=y" json:"y,omitempty"`
	// Z-Coordinate
	Z float64 `protobuf:"fixed64,3,opt,name=z" json:"z,omitempty"`
}

func (m *Coordinates) Reset()                    { *m = Coordinates{} }
func (m *Coordinates) String() string            { return proto.CompactTextString(m) }
func (*Coordinates) ProtoMessage()               {}
func (*Coordinates) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Coordinates) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Coordinates) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Coordinates) GetZ() float64 {
	if m != nil {
		return m.Z
	}
	return 0
}

type SolarSystem struct {
	// The system's ID
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// The system's true security status
	SecurityStatus float64 `protobuf:"fixed64,2,opt,name=security_status,json=securityStatus" json:"security_status,omitempty"`
	// The system's name
	Name string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *SolarSystem) Reset()                    { *m = SolarSystem{} }
func (m *SolarSystem) String() string            { return proto.CompactTextString(m) }
func (*SolarSystem) ProtoMessage()               {}
func (*SolarSystem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SolarSystem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SolarSystem) GetSecurityStatus() float64 {
	if m != nil {
		return m.SecurityStatus
	}
	return 0
}

func (m *SolarSystem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Constellation struct {
	// The constellation's id
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// The constellation's name
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Constellation) Reset()                    { *m = Constellation{} }
func (m *Constellation) String() string            { return proto.CompactTextString(m) }
func (*Constellation) ProtoMessage()               {}
func (*Constellation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Constellation) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Constellation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Region struct {
	// The region's id
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// The region's name
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Region) Reset()                    { *m = Region{} }
func (m *Region) String() string            { return proto.CompactTextString(m) }
func (*Region) ProtoMessage()               {}
func (*Region) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Region) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Region) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetMarketTypesResponse struct {
	// Locations retrieved
	TypeIds []int32 `protobuf:"varint,1,rep,packed,name=type_ids,json=typeIds" json:"type_ids,omitempty"`
}

func (m *GetMarketTypesResponse) Reset()                    { *m = GetMarketTypesResponse{} }
func (m *GetMarketTypesResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMarketTypesResponse) ProtoMessage()               {}
func (*GetMarketTypesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetMarketTypesResponse) GetTypeIds() []int32 {
	if m != nil {
		return m.TypeIds
	}
	return nil
}

func init() {
	proto.RegisterType((*GetLocationsRequest)(nil), "staticData.GetLocationsRequest")
	proto.RegisterType((*GetLocationsResponse)(nil), "staticData.GetLocationsResponse")
	proto.RegisterType((*Location)(nil), "staticData.Location")
	proto.RegisterType((*Station)(nil), "staticData.Station")
	proto.RegisterType((*Coordinates)(nil), "staticData.Coordinates")
	proto.RegisterType((*SolarSystem)(nil), "staticData.SolarSystem")
	proto.RegisterType((*Constellation)(nil), "staticData.Constellation")
	proto.RegisterType((*Region)(nil), "staticData.Region")
	proto.RegisterType((*GetMarketTypesResponse)(nil), "staticData.GetMarketTypesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for StaticData service

type StaticDataClient interface {
	GetLocations(ctx context.Context, in *GetLocationsRequest, opts ...grpc.CallOption) (*GetLocationsResponse, error)
	GetMarketTypes(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetMarketTypesResponse, error)
}

type staticDataClient struct {
	cc *grpc.ClientConn
}

func NewStaticDataClient(cc *grpc.ClientConn) StaticDataClient {
	return &staticDataClient{cc}
}

func (c *staticDataClient) GetLocations(ctx context.Context, in *GetLocationsRequest, opts ...grpc.CallOption) (*GetLocationsResponse, error) {
	out := new(GetLocationsResponse)
	err := grpc.Invoke(ctx, "/staticData.StaticData/GetLocations", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) GetMarketTypes(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetMarketTypesResponse, error) {
	out := new(GetMarketTypesResponse)
	err := grpc.Invoke(ctx, "/staticData.StaticData/GetMarketTypes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for StaticData service

type StaticDataServer interface {
	GetLocations(context.Context, *GetLocationsRequest) (*GetLocationsResponse, error)
	GetMarketTypes(context.Context, *google_protobuf1.Empty) (*GetMarketTypesResponse, error)
}

func RegisterStaticDataServer(s *grpc.Server, srv StaticDataServer) {
	s.RegisterService(&_StaticData_serviceDesc, srv)
}

func _StaticData_GetLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).GetLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/staticData.StaticData/GetLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).GetLocations(ctx, req.(*GetLocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_GetMarketTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).GetMarketTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/staticData.StaticData/GetMarketTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).GetMarketTypes(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _StaticData_serviceDesc = grpc.ServiceDesc{
	ServiceName: "staticData.StaticData",
	HandlerType: (*StaticDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLocations",
			Handler:    _StaticData_GetLocations_Handler,
		},
		{
			MethodName: "GetMarketTypes",
			Handler:    _StaticData_GetMarketTypes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "staticData.proto",
}

func init() { proto.RegisterFile("staticData.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 663 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xcd, 0x4e, 0xdb, 0x40,
	0x10, 0xd6, 0xc6, 0x90, 0x9f, 0x71, 0x48, 0xd1, 0x82, 0x82, 0x09, 0x95, 0x08, 0xbe, 0x34, 0x42,
	0x6d, 0xac, 0x86, 0x03, 0x3f, 0x97, 0x1e, 0x28, 0x42, 0x48, 0xa5, 0x87, 0x0d, 0xa7, 0x5e, 0x22,
	0x13, 0x0f, 0x68, 0x85, 0xe3, 0x75, 0xbd, 0x6b, 0x84, 0x39, 0xf6, 0x15, 0xfa, 0x16, 0x7d, 0x83,
	0x3e, 0x47, 0xdf, 0xa0, 0xea, 0x1b, 0xf4, 0x05, 0x2a, 0xaf, 0xed, 0xc4, 0x06, 0x2a, 0xb8, 0x79,
	0xbe, 0x9f, 0x99, 0xf5, 0xcc, 0xec, 0xc2, 0xaa, 0x54, 0xae, 0xe2, 0xd3, 0x8f, 0xae, 0x72, 0x87,
	0x61, 0x24, 0x94, 0xa0, 0xb0, 0x40, 0x7a, 0xaf, 0xaf, 0x85, 0xb8, 0xf6, 0xd1, 0x71, 0x43, 0xee,
	0xb8, 0x41, 0x20, 0x52, 0x46, 0x04, 0x32, 0x53, 0xf6, 0xb6, 0x72, 0x56, 0x47, 0x97, 0xf1, 0x95,
	0x83, 0xb3, 0x50, 0x25, 0x39, 0xb9, 0xfd, 0x90, 0x54, 0x7c, 0x86, 0x52, 0xb9, 0xb3, 0x30, 0x13,
	0xd8, 0x07, 0xb0, 0x76, 0x8a, 0xea, 0x93, 0x98, 0x66, 0x39, 0x19, 0x7e, 0x8d, 0x51, 0x2a, 0xba,
	0x03, 0x6d, 0x3f, 0xc7, 0x26, 0xdc, 0x93, 0x16, 0xe9, 0x1b, 0x03, 0x83, 0x99, 0x05, 0x76, 0xe6,
	0x49, 0xfb, 0x27, 0x81, 0xf5, 0xaa, 0x55, 0x86, 0x22, 0x90, 0x48, 0xcf, 0xa1, 0x55, 0xe8, 0x32,
	0xa3, 0x39, 0x72, 0x86, 0xa5, 0x1f, 0x7c, 0xca, 0x34, 0x9c, 0x23, 0x27, 0x81, 0x8a, 0x12, 0xb6,
	0xc8, 0xd0, 0x63, 0xd0, 0xa9, 0x92, 0x74, 0x15, 0x8c, 0x1b, 0x4c, 0x2c, 0xd2, 0x27, 0x03, 0x83,
	0xa5, 0x9f, 0x74, 0x17, 0x96, 0x6f, 0x5d, 0x3f, 0x46, 0xab, 0xd6, 0x27, 0x03, 0x73, 0xb4, 0x5e,
	0x2e, 0x57, 0x98, 0x59, 0x26, 0x39, 0xaa, 0x1d, 0x10, 0xfb, 0x37, 0x81, 0x66, 0x81, 0xd3, 0x5d,
	0xa8, 0x47, 0x78, 0xcd, 0x45, 0xa0, 0x33, 0x9a, 0x23, 0x5a, 0x76, 0x33, 0xcd, 0xb0, 0x5c, 0x41,
	0x3f, 0xc0, 0xca, 0x54, 0x04, 0x52, 0xa1, 0xef, 0x6b, 0x73, 0x5e, 0x70, 0xb3, 0x6c, 0x39, 0x2e,
	0x0b, 0x58, 0x55, 0x4f, 0x8f, 0xa0, 0x2d, 0x85, 0xef, 0x46, 0x13, 0x99, 0x48, 0x85, 0x33, 0xcb,
	0xd0, 0xfe, 0x8d, 0xb2, 0x7f, 0x9c, 0xf2, 0x63, 0x4d, 0x33, 0x53, 0x2e, 0x02, 0xfa, 0x0e, 0x1a,
	0x32, 0x9b, 0xbd, 0xb5, 0xa4, 0x6d, 0x6b, 0x15, 0x5b, 0x46, 0xb1, 0x42, 0x63, 0xff, 0xa8, 0x41,
	0x23, 0x07, 0x69, 0x07, 0x6a, 0xdc, 0xcb, 0x3b, 0x56, 0xe3, 0x1e, 0xa5, 0xb0, 0x14, 0xb8, 0xb3,
	0xac, 0x5f, 0x2d, 0xa6, 0xbf, 0xe9, 0x06, 0x34, 0x54, 0x12, 0xe2, 0x84, 0x7b, 0xfa, 0x54, 0x06,
	0xab, 0xa7, 0xe1, 0x99, 0x47, 0xb7, 0xa0, 0xa5, 0x09, 0xed, 0x58, 0xd2, 0x8e, 0x66, 0x0a, 0x7c,
	0x4e, 0x5d, 0xfb, 0xd0, 0xf2, 0x5d, 0xa9, 0x26, 0x12, 0x31, 0xb0, 0x96, 0xf5, 0xb1, 0x7a, 0xc3,
	0x6c, 0xeb, 0x86, 0xc5, 0xd6, 0x0d, 0x2f, 0x8a, 0xad, 0x63, 0xcd, 0x54, 0x3c, 0x46, 0x0c, 0x68,
	0x17, 0xea, 0x61, 0x7c, 0xe9, 0xf3, 0xa9, 0x55, 0xef, 0x93, 0x41, 0x93, 0xe5, 0x11, 0x3d, 0x04,
	0xb8, 0xe2, 0x51, 0x91, 0xb1, 0xf1, 0x6c, 0xc6, 0x96, 0x56, 0xeb, 0x94, 0x87, 0x60, 0x4e, 0x85,
	0x88, 0x3c, 0x1e, 0xb8, 0x0a, 0xa5, 0xd5, 0x7c, 0xdc, 0xdb, 0xe3, 0x05, 0xcd, 0xca, 0x5a, 0x7b,
	0x1f, 0xcc, 0x12, 0x47, 0xdb, 0x40, 0xee, 0x74, 0xbb, 0x08, 0x23, 0x77, 0x69, 0x94, 0xe8, 0x56,
	0x11, 0x46, 0x92, 0x34, 0xba, 0xd7, 0x1d, 0x22, 0x8c, 0xdc, 0xdb, 0x5f, 0xc0, 0x2c, 0x0d, 0xec,
	0x51, 0xa3, 0xdf, 0xc0, 0x2b, 0x89, 0xd3, 0x38, 0xe2, 0x2a, 0x99, 0xa4, 0xe7, 0x88, 0x65, 0x9e,
	0xa8, 0x53, 0xc0, 0x63, 0x8d, 0xce, 0x27, 0x62, 0x2c, 0x26, 0x62, 0xef, 0xc1, 0x4a, 0x65, 0x99,
	0x5e, 0x32, 0x46, 0xfb, 0x2d, 0xd4, 0xb3, 0xa5, 0x7d, 0x91, 0x7a, 0x0f, 0xba, 0xa7, 0xa8, 0xce,
	0xdd, 0xe8, 0x06, 0xd5, 0x45, 0x12, 0xe2, 0xe2, 0x1a, 0x6f, 0x42, 0x33, 0x5f, 0x87, 0xec, 0x16,
	0x2f, 0xb3, 0x46, 0xb6, 0x0f, 0x72, 0xf4, 0x97, 0x00, 0x8c, 0xe7, 0x4d, 0xa5, 0x0a, 0xda, 0xe5,
	0x3b, 0x4d, 0xb7, 0xff, 0x7f, 0xdb, 0xf5, 0xeb, 0xd2, 0xeb, 0x3f, 0xf7, 0x1c, 0xd8, 0x3b, 0xdf,
	0x7e, 0xfd, 0xf9, 0x5e, 0xdb, 0xb2, 0xbb, 0xce, 0xed, 0x7b, 0x27, 0x0e, 0xf8, 0x2d, 0x46, 0x12,
	0x9d, 0xf9, 0xa3, 0x70, 0x44, 0x76, 0xa9, 0x80, 0x4e, 0xf5, 0xe4, 0xb4, 0xfb, 0x68, 0x4b, 0x4e,
	0xd2, 0xa7, 0xb0, 0x67, 0x3f, 0x28, 0xf7, 0xc4, 0xdf, 0x16, 0x05, 0xe9, 0x66, 0xa5, 0x60, 0xfa,
	0xc3, 0xd2, 0x99, 0x69, 0xfd, 0x65, 0x5d, 0xa7, 0xdd, 0xfb, 0x17, 0x00, 0x00, 0xff, 0xff, 0x8e,
	0x2a, 0x6e, 0x35, 0xad, 0x05, 0x00, 0x00,
}
